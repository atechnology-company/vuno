/* Global CSS styles for Vuno Editor */

/* Tailwind v4 import â€“ includes base, components, and utilities */
@import "tailwindcss";

/* Map Tailwind font-sans and font-mono to local fonts */
:root {
  --font-sans: 'Onest', ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
  --font-mono: 'JetBrains Mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
}

/* Base reset */
*, *::before, *::after {
  box-sizing: border-box;
}

body, h1, h2, h3, h4, h5, h6, p, ul, ol, li, figure, figcaption, blockquote, dl, dd {
  margin: 0;
  padding: 0;
}

/* Import local fonts (served from /static/fonts) */
@font-face {
  font-family: 'Onest';
  src: url('/fonts/Onest-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'JetBrains Mono';
  src: url('/fonts/JetBrainsMono-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 800;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'JetBrains Mono';
  src: url('/fonts/JetBrainsMono-Italic-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 800;
  font-style: italic;
  font-display: swap;
}

/* Base styles - Pure OLED Black theme */
html, body {
  height: 100%;
  overflow: hidden;
  background-color: #000000; /* Pure OLED black */
  color: #ffffff; /* Pure white for maximum contrast */
  font-family: 'Onest', ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
  font-size: 14px;
  line-height: 1.6;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* App container */
#app {
  height: 100vh !important;
  width: 100vw !important;
}

/* Force full height on all main containers */
main {
  display: flex !important;
  flex-direction: column !important;
  height: 100vh !important;
}

main > * {
  min-height: 0 !important;
}

main > *:not(.command-overlay):not([role="banner"]) {
  flex: 1 !important;
  display: flex !important;
  flex-direction: column !important;
  min-height: 0 !important;
  height: 100% !important;
}

/* Ensure markdown and code containers fill height */
.markdown-container {
  height: 100% !important;
  min-height: 0 !important;
  display: flex !important;
  flex-direction: column !important;
}

.markdown-container > * {
  flex: 1 !important;
  min-height: 0 !important;
}

/* Force textarea in markdown to fill height */
.markdown-container textarea {
  flex: 1 !important;
  height: 100% !important;
  min-height: 0 !important;
}

/* Hide native caret in markdown completely - multiple methods */
.mdx-editor {
  caret-color: transparent !important;
}

textarea.caret-transparent {
  caret-color: transparent !important;
}

.mdx-editor:focus {
  caret-color: transparent !important;
}

textarea.mdx-editor:focus {
  caret-color: transparent !important;
}

/* Hide caret in all states */
textarea.caret-transparent:focus,
textarea.caret-transparent:active,
textarea.caret-transparent:focus-visible {
  caret-color: transparent !important;
}

.mdx-editor::selection {
  background: rgba(255, 255, 255, 0.2) !important;
}

/* Force caret to be invisible with color and size */
textarea.mdx-editor::-webkit-textfield-decoration-container {
  caret-color: transparent !important;
}

/* Nuclear option: hide all textarea carets globally in markdown mode */
textarea[class*="mdx-"] {
  caret-color: transparent !important;
}

/* Ensure CodeMirror fills height */
.cm-editor {
  flex: 1 !important;
  min-height: 0 !important;
}

/* Scrollbar styling - Minimal OLED theme */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
  background: transparent;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.15);
  border-radius: 4px;
  border: 1px solid transparent;
  background-clip: padding-box;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.25);
  border: 1px solid transparent;
  background-clip: padding-box;
}

/* For Firefox */
* {
  scrollbar-width: thin;
  scrollbar-color: rgba(255, 255, 255, 0.5) transparent;
}

/* Code blocks */
code, pre {
  font-family: 'JetBrains Mono', monospace;
}

/* Syntax highlighting for code blocks */
.syntax-keyword { color: #569CD6; font-weight: bold; }
.syntax-function { color: #DCDCAA; }
.syntax-string { color: #CE9178; }
.syntax-comment { color: #6A9955; }
.syntax-number { color: #B5CEA8; }
.syntax-variable { color: #9CDCFE; }

/* Fix AI response code blocks */
.ai-response pre {
  background-color: #1e1e1e;
  border-radius: 6px;
  padding: 16px;
  overflow: auto;
  margin: 1em 0;
  border: 1px solid #333;
}

.ai-response pre code {
  font-family: 'JetBrains Mono', monospace;
  background-color: transparent;
  padding: 0;
  border: none;
  font-size: 14px;
  line-height: 1.5;
  color: #e1e4e8;
  white-space: pre-wrap !important;
  word-break: break-word !important;
  overflow-wrap: break-word !important;
  tab-size: 4;
}

/* Focus styles for accessibility */
:focus {
  outline: 2px solid #646cff;
  outline-offset: 2px;
}

/* Enhanced focus styles for improved keyboard navigation */
:focus-visible {
  outline: 3px solid #646cff;
  outline-offset: 3px;
  box-shadow: 0 0 0 3px rgba(100, 108, 255, 0.4);
}

/* Ensure input elements have clear focus states for keyboard use */
input:focus, 
button:focus, 
.command-input:focus,
[role="button"]:focus,
[tabindex]:focus {
  outline: 3px solid #646cff;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px rgba(100, 108, 255, 0.5);
}

/* Make keyboard-only focus visible */
.keyboard-user *:focus {
  outline: 3px solid #646cff !important;
  outline-offset: 3px !important;
}

/* Button and form element resets */
button, input, select, textarea {
  font: inherit;
}

/* Utility classes */
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* Animation utilities */
.fade-in {
  animation: fadeIn 0.3s ease-in;
}

.slide-in {
  animation: slideIn 0.3s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { transform: translateY(-10px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

/* Loading spinner */
.spinner {
  width: 24px;
  height: 24px;
  border: 3px solid rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  border-top-color: #646cff;
  animation: spin 0.8s linear infinite;
  display: inline-block;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Responsive media queries */
@media (max-width: 768px) {
  html {
    font-size: 12px;
  }
  
  .toolbar {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .editor-area.split {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
  }
}

/* Add or update the styles for code blocks */
/* Code blocks */
pre {
  background-color: #1e1e2e;
  border-radius: 6px;
  padding: 1rem;
  overflow-x: auto;
  margin: 1rem 0;
  border: 1px solid #292a3a;
}

pre code {
  font-family: 'JetBrains Mono', 'Fira Code', 'Menlo', 'Monaco', 'Courier New', monospace;
  font-size: 14px;
  white-space: pre-wrap;
  color: #e1e4e8;
}

/* CodeMirror specific styles for code blocks */
.cm-content {
  font-family: 'JetBrains Mono', 'Fira Code', 'Menlo', 'Monaco', 'Courier New', monospace !important;
  font-size: 14px !important;
  white-space: pre-wrap !important;
  word-break: break-word !important;
}

/* Fix line breaks in CodeMirror */
.cm-line {
  white-space: pre-wrap !important;
  word-break: break-word !important;
  padding-right: 8px !important;
}

/* Basic tokens - material theme colors */
.cm-keyword { color: #9e78ff; }
.cm-operator { color: #78c4ff; }
.cm-variable-2 { color: #e1e4e8; }
.cm-variable-3, .cm-type { color: #78c4ff; }
.cm-builtin { color: #ffbc7a; }
.cm-atom { color: #ffbc7a; }
.cm-number { color: #ffbc7a; }
.cm-def { color: #62aeef; }
.cm-string { color: #7dd3a4; }
.cm-string-2 { color: #7dd3a4; }
.cm-comment { color: #637286; }
.cm-variable { color: #e1e4e8; }
.cm-tag { color: #62aeef; }
.cm-meta { color: #78c4ff; }
.cm-attribute { color: #7dd3a4; }
.cm-property { color: #62aeef; }
.cm-qualifier { color: #7dd3a4; }
.cm-variable-3, .cm-type { color: #ffbc7a; }
.cm-error {
  color: #ff7a7a;
  background-color: rgba(255, 122, 122, 0.1);
}

/* Styles for the AI code block */
.ai-code-block {
  margin: 1rem 0;
  border-radius: 6px;
  overflow: hidden;
  border: 1px solid #292a3a;
  background-color: #1e1e2e;
}

.ai-code-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #1a1a27;
  padding: 0.5rem 1rem;
  border-bottom: 1px solid #292a3a;
}

.code-lang {
  color: #e1e4e8;
  font-size: 12px;
  font-weight: bold;
  text-transform: uppercase;
}

.insert-code-btn {
  background-color: #6f98e3;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 4px 8px;
  font-size: 12px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.insert-code-btn:hover {
  background-color: #7fa8f3;
}

.ai-code-block pre {
  margin: 0;
  border-radius: 0;
  max-width: 100%; 
  overflow-x: auto;
}

.ai-code-block pre code {
  padding: 1rem;
  display: block;
  white-space: pre-wrap !important;
  word-break: break-word !important;
}

/* CodeMirror-specific fixes for AI code blocks */
.ai-code-block .cm-editor,
.ai-code-block .cm-scroller {
  width: 100% !important;
  max-width: 100% !important;
}

.ai-code-block .cm-content,
.ai-code-block .cm-line {
  white-space: pre-wrap !important;
  word-break: break-word !important;
}

/* Make the editable content in CodeMirror non-editable in AI responses */
.ai-code-block .cm-content[contenteditable="true"] {
  -webkit-user-modify: read-only !important;
  pointer-events: none !important;
}

/* Ensure markdown preview elements render clearly in the dark theme */
.markdown-container .prose {
  color: rgba(255,255,255,0.9) !important;
}

/* Red pulse overlay used for error feedback (similar to file-close pulse) */
.red-pulse {
  background: radial-gradient(circle at 50% 50%, rgba(255, 0, 50, 0.12), rgba(255, 0, 50, 0.06) 20%, rgba(255,0,50,0.02) 40%, transparent 60%);
  animation: redPulse 420ms ease-out 1;
}

@keyframes redPulse {
  0% { opacity: 0.0; transform: scale(0.98); }
  30% { opacity: 1.0; transform: scale(1.02); }
  100% { opacity: 0.0; transform: scale(1.06); }
}

.markdown-container .prose h1,
.markdown-container .prose h2,
.markdown-container .prose h3,
.markdown-container .prose h4 {
  color: #ffffff !important;
  font-weight: 700 !important;
  margin: 0.6rem 0 0.35rem !important;
}

/* Scalable heading sizes tuned for single-pane preview */
.markdown-container .prose h1 { font-size: 2.2rem !important; line-height: 1.15 !important; letter-spacing: -0.5px; }
.markdown-container .prose h2 { font-size: 1.7rem !important; line-height: 1.2 !important; letter-spacing: -0.25px; }
.markdown-container .prose h3 { font-size: 1.35rem !important; line-height: 1.3 !important; }
.markdown-container .prose h4 { font-size: 1.12rem !important; line-height: 1.35 !important; }

/* Reduce top margin if heading follows another heading */
.markdown-container .prose h1 + h2,
.markdown-container .prose h2 + h3,
.markdown-container .prose h3 + h4 { margin-top: 0.2rem !important; }

.markdown-container .prose strong,
.markdown-container .prose b {
  font-weight: 700 !important;
  color: inherit !important;
}

.markdown-container .prose em,
.markdown-container .prose i {
  font-style: italic !important;
  color: inherit !important;
}

.markdown-container .prose code {
  background: rgba(255,255,255,0.03) !important;
  padding: 0.12rem 0.28rem !important;
  border-radius: 4px !important;
  font-family: 'JetBrains Mono', monospace !important;
  color: #e6e6ea !important;
}

/* Command bar: remove global focus outline, but preserve accessibility elsewhere */
.command-bar :focus {
  outline: none !important;
  box-shadow: none !important;
}

/* Suggestion selected indicator: subtle left border instead of full background */
.command-bar .suggestion-selected { border-left: 3px solid #646cff !important; padding-left: 0.5rem !important; }

/* Suggestion chips: remove background & container background */
.command-bar button[class*="px-"][class*="py-"] { background: transparent !important; border: 1px solid rgba(255,255,255,0.1) !important; }
.command-bar button[class*="px-"][class*="py-"]:hover { background: rgba(255,255,255,0.07) !important; }
.command-bar .flex.flex-wrap { background: transparent !important; }


/* Force code colors even in dark mode */
@media (prefers-color-scheme: dark) {
  pre {
    background-color: #282c34 !important;
  }
  
  pre code {
    color: #abb2bf !important; 
  }
}

/* Make the CodeMirror wrapper fill the container */
.cm-editor {
  height: 100% !important;
  width: 100% !important;
}

.cm-scroller {
  height: 100% !important;
  min-height: 0 !important;
  overflow: auto !important;
}

.cm-content {
  min-height: 100% !important;
}

/* Suppress CodeMirror ARIA announcements from showing up visually */
.cm-announced {
  display: none !important;
}

/* Make the editable content in CodeMirror non-editable in AI responses */
.ai-code-block .cm-content[contenteditable="true"] {
  -webkit-user-modify: read-only !important;
  pointer-events: none !important;
}

/* Apply JetBrains Mono to all code elements */
code, pre, .cm-content, .cm-line, .code-editor, pre code {
  font-family: 'JetBrains Mono', monospace !important;
}

/* Make sure CodeMirror themes are applied to our code blocks */
.cm-editor {
  height: 100%;
  font-family: 'JetBrains Mono', monospace !important;
}

/* Ensure nested flex children with scrolling content can actually shrink (common Svelte/Tailwind gotcha) */
.flex-1, .grow {
  min-height: 0; /* allow children with overflow auto to calculate height correctly */
}

/* Extra safety for our main layout containers */
main > .flex, main > .flex > .flex, .markdown-container, .markdown-container > .flex {
  min-height: 0;
}

/* Remove all input outlines and rings */
input:focus, textarea:focus, button:focus {
  outline: none !important;
  box-shadow: none !important;
}

.command-bar-input:focus, .command-input:focus {
  outline: none !important;
  box-shadow: none !important;
  border: none !important;
}

/* Make the editable content in CodeMirror non-editable in AI responses */
.ai-code-block .cm-content[contenteditable="true"] {
  -webkit-user-modify: read-only !important;
  pointer-events: none !important;
  font-family: 'JetBrains Mono', monospace !important;
}

/* Command bar styling */
.command-modal {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 25vh;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  z-index: 1000;
  background: linear-gradient(to top, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 0) 100%);
  pointer-events: all;
  padding: 0;
  margin: 0;
}

.command-content {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  padding: 0.5rem 1rem 1rem 1rem;
  box-sizing: border-box;
} 

/* ==========================
   Figma-aligned styles
   Code section, AI response, chips, top bar
   ========================== */

/* Instrument Sans removed; use local Onest for non-code text */

/* Draggable top status bar (Tauri window) */
.top-status-bar {
  height: 30px;
  background: #222222;
  color: #ffffff;
  font-family: 'Onest', ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial;
  font-size: 12px;
  opacity: 0.5;
  -webkit-app-region: drag;
}

.top-status-bar .no-drag {
  -webkit-app-region: no-drag;
}

/* Command bar chips */
.command-chips {
  display: flex;
  gap: 10px;
  align-items: center;
}

.command-chip {
  background: #191919;
  padding: 5px;
  border-radius: 4px;
  color: #ffffff;
  font-family: 'JetBrains Mono', monospace;
  font-size: 9px;
}

/* AI response layout: text + code sections */
.ai-response {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 24px;
  background: #191919;
  color: #ffffff;
  padding: 10px;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
}

@media (max-width: 900px) {
  .ai-response {
    grid-template-columns: 1fr;
  }
}

.ai-response .ai-text {
  font-family: 'Onest', ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, 'Apple Color Emoji', 'Segoe UI Emoji';
  font-size: 14px;
  line-height: 1.6;
}

.ai-response .ai-code {
  font-family: 'JetBrains Mono', 'Fira Code', Menlo, Monaco, 'Courier New', monospace;
  font-size: 12px;
}

/* Code section container matching Figma colors */
.code-section,
.ai-response .ai-code pre,
.ai-response .ai-code code {
  background-color: #1e1e2e;
  color: #e1e4e8;
  border: 1px solid #292a3a;
}

.code-section {
  padding: 1rem;
  border-radius: 6px;
}

/* Markdown single-pane container helpers (kept minimal) */
.markdown-container textarea {
  font-family: 'Onest', ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial;
}

/* Markdown single-pane editing enhancements */
.mdx-editor.mdx-hidden-text {
  color: transparent !important; /* Hide raw markdown text */
  caret-color: #6366f1 !important; /* Keep caret visible */
  -webkit-text-fill-color: transparent !important; /* Safari */
}

/* Ensure selection still visible */
.mdx-editor.mdx-hidden-text::selection {
  background: rgba(255,255,255,0.12) !important;
}

/* Preview layer sits above the (now invisible) text */
.mdx-preview-layer { 
  z-index: 20; 
}

.mdx-preview.mdx-live {
  opacity: 1 !important; /* Full opacity while editing */
}

/* Optional subtle fade when not editing (unused currently) */
.mdx-preview:not(.mdx-live) {
  opacity: 1; /* Keep same for now */
}